Use Recursion to Create a Range of Numbers

Problem:

We have defined a function named rangeOfNumbers with two parameters. The function should return an array of integers which begins with a number represented by the startNum parameter and ends with a number represented by the endNum parameter. The starting number will always be less than or equal to the ending number. Your function must use recursion by calling itself and not use loops of any kind. It should also work for cases where both startNum and endNum are the same.

Solution:

function rangeOfNumbers(startNum, endNum) {

/*if the endNum and startNum are the same, returns just the startNum for a one num array*/

  if (endNum - startNum === 0) {
    return [startNum];

/*otherwise: let numbers equal range of numbers starting from the start number and each number between it and the end number, decrementing by one each call*/ 

  } else {
    var numbers = rangeOfNumbers(startNum, endNum - 1);

/*with each pass, push adds the number to the end of the array. will keep going until base case reached*/

    numbers.push(endNum);

/*returns the new array*/
    
    return numbers;
  }
}
